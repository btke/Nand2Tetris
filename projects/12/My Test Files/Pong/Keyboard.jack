// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    /** Initializes the keyboard. */
    function void init() {
	
	return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
	
		var char c;
		
		let c = Memory.peek(24576);
		
		return c;
		
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
		
		var char currKey, c;
		
		let currKey = Keyboard.keyPressed();
		
		while (currKey = 0){
		
			let currKey = Keyboard.keyPressed();
			
		}
		
		let c = currKey;
		
		while (~(currKey = 0)){

			let currKey = Keyboard.keyPressed();
			
		}
		
		return c;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
		
		var String input, output;
		var char currChar;
		var int n, currLength;
		
		let input = String.new(512);
		
		do Output.printString(message);
		do Output.println();
		
		while (~(currChar = 128)){

			let currChar = Keyboard.readChar();
			
			if (currChar = 129){
				
				do input.eraseLastChar();
				do Output.backSpace();
				
			}
			
			else {
			
				do input.appendChar(currChar);
				do Output.printChar(currChar);
				
			}
			
		}
	
	
	let currLength = input.length();
	
	let output = String.new(currLength - 1);
	
	let n = 0;
	
	while (~(n = (currLength - 1))){
		
		do output.appendChar(input.charAt(n));
		let n = n + 1;
		
	}
	
	do Memory.deAlloc(input);
	
	return output;
   }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
	
		var String input, output;
		var char currChar;
		var int n, currLength;
		
		let input = String.new(512);
		
		do Output.printString(message);
		do Output.println();
				
		while (~(currChar = 128)){

			let currChar = Keyboard.readChar();
			
			if (currChar = 129){
				
				do input.eraseLastChar();
				do Output.backSpace();
				
			}
			
			else {
			
				do input.appendChar(currChar);
				do Output.printChar(currChar);
				
			}
			
		}
	
		let currLength = input.length();
	
	let output = String.new(currLength - 1);
	
	let n = 0;
	
	while (~(n = (currLength - 1))){
		
		do output.appendChar(input.charAt(n));
		let n = n + 1;
		
	}
	
	do Memory.deAlloc(input);
	
	return (output.intValue());

    }
}
