function Ball.new 0
push constant 9
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
call Score.new 0
pop this 8
push this 8
call Score.ShowScore 1
pop temp 0
push constant 1
pop this 2
push constant 0
pop this 3
push pointer 0
call Ball.draw 1
pop temp 0
push pointer 0
return
function Ball.getBallx 0
push argument 0
pop pointer 0
push this 0
return
function Ball.getBally 0
push argument 0
pop pointer 0
push this 1
return
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push this 8
call Score.dispose 1
pop temp 0
push constant 0
return
function Ball.draw 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push constant 5
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Ball.erase 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push constant 6
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Ball.CheckCollision 0
push argument 0
pop pointer 0
push this 0
push constant 5
sub
push constant 1
eq
not
if-goto Else0
push this 8
call Score.incPlayerScore 1
pop temp 0
push this 8
call Score.ShowScore 1
pop temp 0
push pointer 0
call Ball.resetBall 1
pop temp 0
label Else0
push this 0
push constant 5
add
push constant 510
eq
not
if-goto Else1
push this 8
call Score.incAIScore 1
pop temp 0
push this 8
call Score.ShowScore 1
pop temp 0
push pointer 0
call Ball.resetBall 1
pop temp 0
label Else1
push this 1
push constant 5
sub
push constant 15
lt
not
if-goto Else2
push constant 1
neg
push this 3
call Math.multiply 2
pop this 3
label Else2
push this 1
push constant 5
add
push constant 239
gt
not
if-goto Else3
push constant 1
neg
push this 3
call Math.multiply 2
pop this 3
label Else3
push this 1
push constant 5
add
push this 5
gt
push this 1
push constant 5
sub
push this 5
push constant 50
add
lt
and
push this 0
push constant 5
add
push this 4
gt
and
push this 0
push constant 5
sub
push this 4
push constant 5
add
lt
and
not
if-goto Else4
push this 3
push constant 0
eq
not
if-goto Else5
push constant 1
pop this 3
label Else5
push this 1
push constant 5
add
push this 5
gt
push this 1
push this 5
push constant 10
add
lt
and
not
if-goto Else6
push this 3
push constant 0
lt
not
if-goto Else7
push constant 2
push this 3
call Math.multiply 2
pop this 3
goto ExitIf7
label Else7
push constant 1
neg
push this 3
call Math.multiply 2
pop this 3
label ExitIf7
label Else6
push this 1
push this 5
push constant 10
add
gt
push this 1
push this 5
push constant 20
add
lt
and
not
if-goto Else8
push this 3
push constant 0
lt
not
if-goto Else9
push constant 1
push this 3
call Math.multiply 2
pop this 3
goto ExitIf9
label Else9
push constant 1
neg
push this 3
call Math.multiply 2
pop this 3
label ExitIf9
label Else8
push this 1
push this 5
push constant 20
add
gt
push this 1
push this 5
push constant 30
add
lt
and
not
if-goto Else10
push constant 0
pop this 3
label Else10
push this 1
push this 5
push constant 30
add
gt
push this 1
push this 5
push constant 40
add
lt
and
not
if-goto Else11
push this 3
push constant 0
lt
not
if-goto Else12
push constant 1
neg
push this 3
call Math.multiply 2
pop this 3
goto ExitIf12
label Else12
push constant 1
push this 3
call Math.multiply 2
pop this 3
label ExitIf12
label Else11
push this 1
push this 5
push constant 40
add
gt
push this 1
push constant 5
sub
push this 5
push constant 50
add
lt
and
not
if-goto Else13
push this 3
push constant 0
lt
not
if-goto Else14
push constant 1
neg
push this 3
call Math.multiply 2
pop this 3
goto ExitIf14
label Else14
push constant 2
push this 3
call Math.multiply 2
pop this 3
label ExitIf14
label Else13
push constant 1
neg
push this 2
call Math.multiply 2
pop this 2
push this 0
push constant 5
sub
pop this 0
push this 3
push constant 4
gt
not
if-goto Else15
push constant 4
pop this 3
label Else15
push this 3
push constant 4
neg
lt
not
if-goto Else16
push constant 4
neg
pop this 3
label Else16
label Else4
push this 1
push constant 5
add
push this 7
gt
push this 1
push constant 5
sub
push this 7
push constant 50
add
lt
and
push this 0
push constant 5
sub
push this 6
push constant 5
add
lt
and
push this 0
push constant 5
add
push this 6
gt
and
not
if-goto Else17
push this 3
push constant 0
eq
not
if-goto Else18
push constant 1
pop this 3
label Else18
push this 1
push constant 5
add
push this 7
gt
push this 1
push this 7
push constant 10
add
lt
and
not
if-goto Else19
push this 3
push constant 0
lt
not
if-goto Else20
push constant 2
push this 3
call Math.multiply 2
pop this 3
goto ExitIf20
label Else20
push constant 1
neg
push this 3
call Math.multiply 2
pop this 3
label ExitIf20
label Else19
push this 1
push this 7
push constant 10
add
gt
push this 1
push this 7
push constant 20
add
lt
and
not
if-goto Else21
push this 3
push constant 0
lt
not
if-goto Else22
push constant 1
push this 3
call Math.multiply 2
pop this 3
goto ExitIf22
label Else22
push constant 1
neg
push this 3
call Math.multiply 2
pop this 3
label ExitIf22
label Else21
push this 1
push this 7
push constant 20
add
gt
push this 1
push this 7
push constant 30
add
lt
and
not
if-goto Else23
push constant 0
pop this 3
label Else23
push this 1
push this 7
push constant 30
add
gt
push this 1
push this 7
push constant 40
add
lt
and
not
if-goto Else24
push this 3
push constant 0
lt
not
if-goto Else25
push constant 1
neg
push this 3
call Math.multiply 2
pop this 3
goto ExitIf25
label Else25
push constant 1
push this 3
call Math.multiply 2
pop this 3
label ExitIf25
label Else24
push this 1
push this 7
push constant 40
add
gt
push this 1
push constant 5
sub
push this 7
push constant 50
add
lt
and
not
if-goto Else26
push this 3
push constant 0
lt
not
if-goto Else27
push constant 1
neg
push this 3
call Math.multiply 2
pop this 3
goto ExitIf27
label Else27
push constant 2
push this 3
call Math.multiply 2
pop this 3
label ExitIf27
label Else26
push constant 1
neg
push this 2
call Math.multiply 2
pop this 2
push this 0
push constant 5
add
pop this 0
push this 3
push constant 4
gt
not
if-goto Else28
push constant 4
pop this 3
label Else28
push this 3
push constant 4
neg
lt
not
if-goto Else29
push constant 4
neg
pop this 3
label Else29
label Else17
push constant 0
return
function Ball.resetBall 0
push argument 0
pop pointer 0
push pointer 0
call Ball.erase 1
pop temp 0
push constant 255
pop this 0
push constant 127
pop this 1
push constant 1
pop this 2
push constant 0
pop this 3
push pointer 0
call Ball.draw 1
pop temp 0
push constant 500
call Sys.wait 1
pop temp 0
push constant 0
return
function Ball.move 0
push argument 0
pop pointer 0
push argument 1
pop this 4
push argument 2
pop this 5
push argument 3
pop this 6
push argument 4
pop this 7
push pointer 0
call Ball.erase 1
pop temp 0
push pointer 0
call Ball.CheckCollision 1
pop temp 0
push this 0
push this 2
add
pop this 0
push this 1
push this 3
add
pop this 1
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
