
class PongGame {
   field Bat bat, AIbat; // the bat of this game
   field Ball ball;
   field int direction; // the bat's current direction: 
                        // 0=none, 3=left, 4=right
   field int Batx, Baty, AIBatx, AIBaty, Ballx1, Ballx2, Bally;
   field int drawx;
   field int RandInt;
   field int n;
   field int difficulty;
 		
	
   /** Constructs a new Pong Game. */
   constructor PongGame new() {
	  do home();
	  do ReadyGame();
	  do run();
      return this;
   }

   /** Disposes this game. */
   method void dispose() {
      do bat.dispose();
	  do ball.dispose();
      do Memory.deAlloc(this);
      return;
   }

   /** Moves the bat in the current direction. */
   method void move() {
   
	  do Screen.setColor(false);
	  
	  //let drawx = 10;
	  //Draws the dotted line
	  //while (drawx + 10 < 254){
      //do Screen.drawLine(255, drawx, 255, drawx+4);
	  //let drawx = drawx + 10;
	  //}
	  
	  //Draws the borders
	  do Screen.drawLine(0, 15, 510, 15);	
	  do Screen.drawLine(0, 239, 510, 239);
	  do Screen.drawLine(255, 15, 255, 239);
	  
      if (direction = 3) { do bat.moveUp(); }
      if (direction = 4) { do bat.moveDown(); }
	  if (direction = 0) { do bat.draw(); }
	  
	  let Batx = bat.getBatx();
	  let Baty = bat.getBaty();
	  let AIBatx = AIbat.getBatx();
	  let AIBaty = AIbat.getBaty();
	  let Ballx1 = ball.getBallx();
	  let Bally = ball.getBally();
	  
	  do ball.move(Batx, Baty, AIBatx, AIBaty);
	  let Ballx2 = ball.getBallx();
	  
	  if (difficulty = 1) {
		let n = (7 * RandInt) - 10;	
	  }
	  
	  if (difficulty = 2) {
		let n = (6 * RandInt) - 5;
	  }
	  
	  if (difficulty = 3) {
		let n = (5 * RandInt);
	  }
	  
//	do Output.printInt(AIBaty + n);
//	do Output.printString(" ");
	  
	  if (((AIBaty + n) > Bally) & (Ballx2 < Ballx1)) {
			do AIbat.moveUp();
		}
	  else {
			do AIbat.draw();
		}
	  
	  if (((AIBaty + n) < Bally) & (Ballx2 < Ballx1)) {
			do AIbat.moveDown();	
		}
		else {
			do AIbat.draw();
		}
	  
      do Sys.wait(5);  // delays the next movement
      return;
   }
	
	
   /** Runs the game: handles the user's inputs and moves the bat accordingly */
   method void run() {
      var char key;  // the key currently pressed by the user
      var boolean exit;
      let exit = false;
      
      while (~exit) {
	  
         // waits for a key to be pressed
         while (key = 0) {
			let direction = 0;
            let key = Keyboard.keyPressed();
			do move();
         }
         if (key = 81)  { let exit = true; }     // q key
         if (key = 131) { let direction = 3; }   // up arrow
         if (key = 133) { let direction = 4; }   // down arrow
			
		 do Random.setSeed(RandInt);
		 let RandInt = Random.randRange(10);	
			
         // waits for the key to be released
         while (~(key = 0)) {
            let key = Keyboard.keyPressed();
            do move();
         }
		 
     } // while
	  
     return;
   }
   
   method void ReadyGame() {
   
		do Screen.clearScreen();
		do Screen.setColor(true);
		do Screen.drawRectangle(0, 0, 510, 254);		  
		let bat = Bat.new(475, 110, 2);
		let AIbat =  Bat.new(25, 150, 2);
		let ball = Ball.new(255, 127);
		let RandInt = 1;
		let direction = 0;  // initial state is no movement
		do Random.setSeed(RandInt);
		let RandInt = Random.randRange(10);
	
		return;
   }
   
   method void home() {
	var char key;
	
	do Screen.clearScreen();
	do Screen.setColor(true);
	do Output.moveCursor(0,0);
	do Output.printString("Select a difficulty to start: ");
	do Output.println();
	do Output.printString("1) Easy ");
	do Output.println();
	do Output.printString("2) Intermediate ");
    do Output.println();
	do Output.printString("3) Difficult ");
   
    while (key = 0 | (~(key = 49) & ~(key = 50) & ~(key = 51))) {
            let key = Keyboard.keyPressed();
         }
	
	if (key = 49)  {let difficulty = 1;} 
	if (key = 50)  {let difficulty = 2;}
	if (key = 51)  {let difficulty = 3;}	
	
    return;
   
   }
   
}



